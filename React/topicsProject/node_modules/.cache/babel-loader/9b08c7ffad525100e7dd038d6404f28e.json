{"ast":null,"code":"var _jsxFileName = \"/Users/igorromero/NotesInGeneral/React/topicsProject/src/containers/Blog/Blog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst blog = () => {\n  _s();\n\n  const [postState, setPostState] = useState([]);\n  const [postId, setPostId] = useState(null);\n  const [hasError, setHasError] = useState(false);\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.commm/posts').then(response => {\n      const limitedResponse = response.data.slice(0, 4); // irá limitar em até 4 dados\n\n      const postWithAuthor = limitedResponse.map(post => {\n        return { ...post,\n          author: 'Igor'\n        };\n      });\n      setPostState(postWithAuthor);\n    }).catch(error => {\n      console.log(error);\n      setHasError(true);\n    });\n  }, []);\n\n  const postSelectedHandler = id => {\n    setPostId(id);\n  };\n\n  let posts = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Something went wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 15\n  }, this);\n\n  if (!hasError) {\n    posts = postState.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        author: post.author,\n        clicked: () => postSelectedHandler(post.id)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Posts\",\n      children: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(FullPost, {\n        id: postId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(NewPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(blog, \"LJ2g0aGqs4r0Ov5mDFsld0MZXdI=\");\n\nexport default blog;","map":{"version":3,"sources":["/Users/igorromero/NotesInGeneral/React/topicsProject/src/containers/Blog/Blog.js"],"names":["React","useEffect","useState","axios","Post","FullPost","NewPost","blog","postState","setPostState","postId","setPostId","hasError","setHasError","get","then","response","limitedResponse","data","slice","postWithAuthor","map","post","author","catch","error","console","log","postSelectedHandler","id","posts","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACW,GAAN,CAAU,8CAAV,EAA0DC,IAA1D,CAAgEC,QAAD,IAAc;AAC3E,YAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAxB,CAD2E,CACxB;;AACnD,YAAMC,cAAc,GAAGH,eAAe,CAACI,GAAhB,CAAqBC,IAAD,IAAU;AACnD,eAAO,EACL,GAAGA,IADE;AAELC,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID,OALsB,CAAvB;AAMAd,MAAAA,YAAY,CAACW,cAAD,CAAZ;AACD,KATD,EASGI,KATH,CASSC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAZ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMe,mBAAmB,GAAIC,EAAD,IAAQ;AAClClB,IAAAA,SAAS,CAACkB,EAAD,CAAT;AACD,GAFD;;AAIA,MAAIC,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;;AACA,MAAI,CAAClB,QAAL,EAAe;AACbkB,IAAAA,KAAK,GAAGtB,SAAS,CAACa,GAAV,CAAeC,IAAD,IAAU;AAC9B,0BAAO,QAAC,IAAD;AAAoB,QAAA,KAAK,EAAEA,IAAI,CAACS,KAAhC;AAAuC,QAAA,MAAM,EAAET,IAAI,CAACC,MAApD;AAA4D,QAAA,OAAO,EAAE,MAAMK,mBAAmB,CAACN,IAAI,CAACO,EAAN;AAA9F,SAAWP,IAAI,CAACO,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFO,CAAR;AAGD;;AAED,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEpB;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7CD;;GAAMH,I;;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\n\nconst blog = () => {\n  const [postState, setPostState] = useState([]);\n  const [postId, setPostId] = useState(null);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.commm/posts').then((response) => {\n      const limitedResponse = response.data.slice(0, 4); // irá limitar em até 4 dados\n      const postWithAuthor = limitedResponse.map((post) => {\n        return {\n          ...post,\n          author: 'Igor',\n        };\n      });\n      setPostState(postWithAuthor);\n    }).catch(error => {\n      console.log(error)\n      setHasError(true);\n    });\n  }, []);\n\n  const postSelectedHandler = (id) => {\n    setPostId(id);\n  };\n\n  let posts = <p>Something went wrong</p>\n  if (!hasError) {\n    posts = postState.map((post) => {\n      return <Post key={post.id} title={post.title} author={post.author} clicked={() => postSelectedHandler(post.id)} />;\n    });\n  }\n\n  return (\n    <div>\n      <section className=\"Posts\">\n        {posts}\n      </section>\n      <section>\n        <FullPost id={postId} />\n      </section>\n      <section>\n        <NewPost />\n      </section>\n    </div>\n  );\n};\n\nexport default blog;\n"]},"metadata":{},"sourceType":"module"}