{"ast":null,"code":"var _jsxFileName = \"/Users/igorromero/NotesInGeneral/React/topicsProject/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(request => {\n  console.log('interceptor request: ' + JSON.stringify(request));\n});\naxios.interceptors.response.use(response => {\n  console.log('interceptor response: ' + JSON.stringify(response));\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 18\n}, this), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/igorromero/NotesInGeneral/React/topicsProject/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","axios","interceptors","request","use","console","log","JSON","stringify","response","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BD,OAAO,IAAI;AACxCE,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAtC;AACD,CAFD;AAIAF,KAAK,CAACC,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CAAgCK,QAAQ,IAAI;AAC1CJ,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAvC;AACD,CAFD;AAIAX,QAAQ,CAACY,MAAT,eAAiB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAjB,EAA0BC,QAAQ,CAACC,cAAT,CAAyB,MAAzB,CAA1B;AACAZ,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from 'axios';\n\naxios.interceptors.request.use(request => {\n  console.log('interceptor request: ' + JSON.stringify(request));\n});\n\naxios.interceptors.response.use(response => {\n  console.log('interceptor response: ' + JSON.stringify(response));\n})\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}