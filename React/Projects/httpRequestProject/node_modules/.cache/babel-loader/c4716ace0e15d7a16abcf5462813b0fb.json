{"ast":null,"code":"var _jsxFileName = \"/Users/igorromero/NotesInGeneral/React/httpRequestProject/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\n\nfunction App() {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsloading] = useState(true);\n\n  const fetchMovieHandler = () => {\n    axios.get('https://swapi.dev/api/films/').then(res => {\n      const transformedMovie = res.data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawlm,\n          releaseDate: movie.release_date\n        };\n      });\n      setMovie(transformedMovie);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/igorromero/NotesInGeneral/React/httpRequestProject/src/App.js"],"names":["React","useState","MoviesList","axios","Spinner","App","movie","setMovie","isLoading","setIsloading","fetchMovieHandler","get","then","res","transformedMovie","data","results","map","id","episode_id","title","openingText","opening_crawlm","releaseDate","release_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC9BP,IAAAA,KAAK,CAACQ,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAAgDC,GAAD,IAAS;AACtD,YAAMC,gBAAgB,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAsBX,KAAD,IAAW;AACvD,eAAO;AACLY,UAAAA,EAAE,EAAEZ,KAAK,CAACa,UADL;AAELC,UAAAA,KAAK,EAAEd,KAAK,CAACc,KAFR;AAGLC,UAAAA,WAAW,EAAEf,KAAK,CAACgB,cAHd;AAILC,UAAAA,WAAW,EAAEjB,KAAK,CAACkB;AAJd,SAAP;AAMD,OAPwB,CAAzB;AAQAjB,MAAAA,QAAQ,CAACO,gBAAD,CAAR;AACD,KAVD;AAWD,GAZD;;AAcA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEJ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEJ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAWD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\n\nfunction App() {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsloading] = useState(true);\n\n  const fetchMovieHandler = () => {\n    axios.get('https://swapi.dev/api/films/').then((res) => {\n      const transformedMovie = res.data.results.map((movie) => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawlm,\n          releaseDate: movie.release_date,\n        };\n      });\n      setMovie(transformedMovie);\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <Spinner/>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movie} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}