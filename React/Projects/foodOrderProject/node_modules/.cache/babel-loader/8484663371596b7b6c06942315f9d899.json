{"ast":null,"code":"var _jsxFileName = \"/Users/igorromero/NotesInGeneral/React/foodOrderProject/src/state/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartValue = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cardReducer = (prevState, action) => {\n  if (action.type === 'ADD') {\n    const updatedCart = prevState.items.concat(action.item);\n    const updatedTotalAmount = prevState.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedCart,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartValue;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cardReducer, defaultCartValue);\n\n  const addItemHandler = item => {\n    dispatchCart({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCart({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartValue = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"PP6vBV4ZRNwOicCMUVDERhIk28c=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/igorromero/NotesInGeneral/React/foodOrderProject/src/state/CartProvider.js"],"names":["useReducer","CartContext","defaultCartValue","items","totalAmount","cardReducer","prevState","action","type","updatedCart","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCart","addItemHandler","removeItemHandler","id","cartValue","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACzC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAA0B;AACxB,UAAMC,WAAW,GAAGH,SAAS,CAACH,KAAV,CAAgBO,MAAhB,CAAuBH,MAAM,CAACI,IAA9B,CAApB;AACA,UAAMC,kBAAkB,GAAGN,SAAS,CAACF,WAAV,GAAwBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAAnF;AACA,WAAO;AACLX,MAAAA,KAAK,EAAEM,WADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAVD;;AAYA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA5C;;AAEA,QAAMiB,cAAc,GAAIR,IAAD,IAAU;AAC/BO,IAAAA,YAAY,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMS,iBAAiB,GAAIC,EAAD,IAAQ;AAChCH,IAAAA,YAAY,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAAlB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,SAA7B;AAAA,cAAyCN,KAAK,CAACS;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;GAAMV,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartValue = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cardReducer = (prevState, action) => {\n  if(action.type === 'ADD') {\n    const updatedCart = prevState.items.concat(action.item);\n    const updatedTotalAmount = prevState.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedCart,\n      totalAmount: updatedTotalAmount\n    }\n  }\n  return defaultCartValue;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCart] = useReducer(cardReducer, defaultCartValue);\n\n  const addItemHandler = (item) => {\n    dispatchCart({ type: 'ADD', item: item });\n  };\n\n  const removeItemHandler = (id) => {\n    dispatchCart({ type: 'REMOVE', id: id });\n  };\n\n  const cartValue = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n  };\n\n  return <CartContext.Provider value={cartValue}>{props.children}</CartContext.Provider>;\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}