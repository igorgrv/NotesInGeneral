{"ast":null,"code":"var _jsxFileName = \"/Users/igorromero/NotesInGeneral/React/Projects/customHooksProject-2/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = taskText => {\n    setIsLoading(true);\n    setError(null);\n    axios.post('https://react-my-burger-igor-default-rtdb.firebaseio.com/tasks.json', JSON.stringify({\n      text: taskText\n    })).then(res => {\n      const generatedId = res.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    }).catch(err => {\n      setError(err.message || 'Something went wrong!');\n    });\n    setIsLoading(false);\n  };\n  /*  try {\n     const response = await fetch(\n       ,\n       {\n         method: 'POST',\n         body: JSON.stringify({ text: taskText }),\n         headers: {\n           'Content-Type': 'application/json',\n         },\n       }\n     );\n      if (!response.ok) {\n       throw new Error('Request failed!');\n     }\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n     const createdTask = { id: generatedId, text: taskText };\n      props.onAddTask(createdTask);\n   } catch (err) {\n     setError(err.message || 'Something went wrong!');\n   }\n   setIsLoading(false);\n  }; */\n\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/igorromero/NotesInGeneral/React/Projects/customHooksProject-2/src/components/NewTask/NewTask.js"],"names":["axios","useState","Section","TaskForm","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","post","JSON","stringify","text","then","res","generatedId","name","createdTask","id","onAddTask","catch","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,gBAAgB,GAAIC,QAAD,IAAc;AACrCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAT,IAAAA,KAAK,CAACY,IAAN,CAAW,qEAAX,EAAkFC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAf,CAAlF,EACCK,IADD,CACOC,GAAD,IAAS;AACb,YAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB,CADa,CACiB;;AAC9B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBH,QAAAA,IAAI,EAAEJ;AAAzB,OAApB;AACAN,MAAAA,KAAK,CAACiB,SAAN,CAAgBF,WAAhB;AACD,KALD,EAKGG,KALH,CAKUC,GAAD,IAAS;AAChBf,MAAAA,QAAQ,CAACe,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD,KAPD;AAQAlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAZD;AAcC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAME,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEG,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApDD;;GAAMJ,O;;KAAAA,O;AAsDN,eAAeA,OAAf","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    axios.post('https://react-my-burger-igor-default-rtdb.firebaseio.com/tasks.json', JSON.stringify({ text: taskText }))\n    .then((res) => {\n      const generatedId = res.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n      props.onAddTask(createdTask);\n    }).catch((err) => {\n      setError(err.message || 'Something went wrong!');\n    })\n    setIsLoading(false);\n  }\n\n   /*  try {\n      const response = await fetch(\n        ,\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }; */\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}