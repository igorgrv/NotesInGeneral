{"ast":null,"code":"var _jsxFileName = \"/Users/igorromero/NotesInGeneral/React/httpRequestProject/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\n\nfunction App() {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n\n  const fetchMovieHandler = () => {\n    setIsloading(true);\n    axios.get('https://swapi.dev/api/films/').then(res => {\n      setTimeout(() => {\n        const transformedMovie = res.data.results.map(movie => {\n          return {\n            id: movie.episode_id,\n            title: movie.title,\n            openingText: movie.opening_crawlm,\n            releaseDate: movie.release_date\n          };\n        });\n        setMovie(transformedMovie);\n      }, 5000);\n      setIsloading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/igorromero/NotesInGeneral/React/httpRequestProject/src/App.js"],"names":["React","useState","MoviesList","axios","Spinner","App","movie","setMovie","isLoading","setIsloading","fetchMovieHandler","get","then","res","setTimeout","transformedMovie","data","results","map","id","episode_id","title","openingText","opening_crawlm","releaseDate","release_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,IAAAA,KAAK,CAACQ,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAAgDC,GAAD,IAAS;AACtDC,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMC,gBAAgB,GAAGF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAsBZ,KAAD,IAAW;AACvD,iBAAO;AACLa,YAAAA,EAAE,EAAEb,KAAK,CAACc,UADL;AAELC,YAAAA,KAAK,EAAEf,KAAK,CAACe,KAFR;AAGLC,YAAAA,WAAW,EAAEhB,KAAK,CAACiB,cAHd;AAILC,YAAAA,WAAW,EAAElB,KAAK,CAACmB;AAJd,WAAP;AAMD,SAPwB,CAAzB;AAQAlB,QAAAA,QAAQ,CAACQ,gBAAD,CAAR;AACD,OAVS,EAUP,IAVO,CAAV;AAWAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAbD;AAcD,GAhBD;;AAkBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,iBAAc,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEGE,SAAS,iBAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,CAJF,CADF;AAWD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\n\nfunction App() {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n\n  const fetchMovieHandler = () => {\n    setIsloading(true);\n    axios.get('https://swapi.dev/api/films/').then((res) => {\n      setTimeout(() => {\n        const transformedMovie = res.data.results.map((movie) => {\n          return {\n            id: movie.episode_id,\n            title: movie.title,\n            openingText: movie.opening_crawlm,\n            releaseDate: movie.release_date,\n          };\n        });\n        setMovie(transformedMovie);\n      }, 5000);\n      setIsloading(false);\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={movie} />}\n        {isLoading && <Spinner/>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}