{"ast":null,"code":"var _jsxFileName = \"/Users/igorromero/NotesInGeneral/React/assignment/useEffect-first/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') return {\n    value: action.val,\n    isValid: action.val.includes('@')\n  };\n  if (action.type === 'INPUT_BLUR') return {\n    value: prevState.value,\n    isValid: prevState.value.includes('@')\n  };\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') return {\n    value: action.val,\n    isValid: action.val.trim().length > 6\n  };\n  if (action.type === 'INPUT_BLUR') return {\n    value: prevState.value,\n    isValid: prevState.value.trim().length > 6\n  };\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: undefined\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: undefined\n  });\n  /*   useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('irá rodar a cada vez que for pausado');\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 500);\n     return () => {\n      clearTimeout(timer);\n      console.log('Irá rodar a todo momento');\n    };\n  }, [enteredEmail, enteredPassword]); */\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailReducer.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(passwordState.isValid && emailReducer.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR',\n      val: emailReducer.isValid\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR',\n      val: passwordReducer.isValid\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailReducer.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"MaOhLEN5nkEZ/KkFpEVo9qx69Co=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/igorromero/NotesInGeneral/React/assignment/useEffect-first/src/components/Login/Login.js"],"names":["React","useReducer","useState","Card","classes","Button","emailReducer","prevState","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","undefined","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') return { value: action.val, isValid: action.val.includes('@') };\n  if (action.type === 'INPUT_BLUR') return { value: prevState.value, isValid: prevState.value.includes('@') };\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') return { value: action.val, isValid: action.val.trim().length > 6 };\n  if (action.type === 'INPUT_BLUR') return { value: prevState.value, isValid: prevState.value.trim().length > 6 };\n  return { value: '', isValid: false };\n};\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, { value: '', isValid: undefined });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, { value: '', isValid: undefined });\n\n  /*   useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('irá rodar a cada vez que for pausado');\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n      console.log('Irá rodar a todo momento');\n    };\n  }, [enteredEmail, enteredPassword]); */\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value });\n    setFormIsValid(emailReducer.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value });\n    setFormIsValid(passwordState.isValid && emailReducer.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR', val: emailReducer.isValid });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: 'INPUT_BLUR', val: passwordReducer.isValid  });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailReducer.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div className={`${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`}>\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div className={`${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}